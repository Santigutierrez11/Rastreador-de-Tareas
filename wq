[1mdiff --git a/src/main/java/RastreadorTareas.java b/src/main/java/RastreadorTareas.java[m
[1mindex f946d6a..06a5977 100644[m
[1m--- a/src/main/java/RastreadorTareas.java[m
[1m+++ b/src/main/java/RastreadorTareas.java[m
[36m@@ -3,12 +3,8 @@[m [mimport com.fasterxml.jackson.databind.ObjectMapper;[m
 [m
 import java.io.File;[m
 import java.io.IOException;[m
[31m-import java.util.Arrays;[m
[31m-import java.util.Date;[m
[32m+[m[32mimport java.util.*;[m
 import java.text.SimpleDateFormat;[m
[31m-import java.util.List;[m
[31m-[m
[31m-import java.util.Scanner;[m
 [m
 public class RastreadorTareas {[m
     private static final String FILE_PATH = "tareas.json";[m
[36m@@ -83,41 +79,50 @@[m [mpublic class RastreadorTareas {[m
     public static void agregarTarea(){[m
         Scanner in = new Scanner(System.in);[m
         ObjectMapper mapper = new ObjectMapper();[m
[32m+[m[32m        List<Tareas> tareasLista = new ArrayList<>();[m
[32m+[m
[32m+[m[32m        try {[m
[32m+[m[32m            File archivo = new File(FILE_PATH);[m
[32m+[m
[32m+[m[32m            if(archivo.exists() && archivo.length() > 0){[m
[32m+[m[32m                tareasLista = mapper.readValue(archivo, new TypeReference<List<Tareas>>() {});[m
[32m+[m[32m            }[m
 [m
[31m-        System.out.print("Ingresa la descripciÃ³n: ");[m
[31m-        String descripcion = in.nextLine();[m
[31m-        String estado;[m
[31m-[m
[31m-        while(true){[m
[31m-            byte estadoResultado = estados();[m
[31m-            if(estadoResultado >= 1 && estadoResultado <= 3){[m
[31m-                switch(estadoResultado){[m
[31m-                    case 1:[m
[31m-                        estado = "Sin iniciar";[m
[31m-                        break;[m
[31m-                    case 2:[m
[31m-                        estado = "En progreso";[m
[31m-                        break;[m
[31m-                    default:[m
[31m-                        estado = "Terminada";[m
[31m-                        break;[m
[32m+[m[32m            System.out.print("Ingresa la descripciÃ³n: ");[m
[32m+[m[32m            String descripcion = in.nextLine();[m
[32m+[m[32m            String estado;[m
[32m+[m
[32m+[m[32m            while(true){[m
[32m+[m[32m                byte estadoResultado = estados();[m
[32m+[m[32m                if(estadoResultado >= 1 && estadoResultado <= 3){[m
[32m+[m[32m                    switch(estadoResultado){[m
[32m+[m[32m                        case 1:[m
[32m+[m[32m                            estado = "Sin iniciar";[m
[32m+[m[32m                            break;[m
[32m+[m[32m                        case 2:[m
[32m+[m[32m                            estado = "En progreso";[m
[32m+[m[32m                            break;[m
[32m+[m[32m                        default:[m
[32m+[m[32m                            estado = "Terminada";[m
[32m+[m[32m                            break;[m
[32m+[m[32m                    }[m
[32m+[m[32m                    break;[m
[32m+[m[32m                } else {[m
[32m+[m[32m                    System.out.println("OpciÃ³n no valida");[m
                 }[m
[31m-                break;[m
[31m-            } else {[m
[31m-                System.out.println("OpciÃ³n no valida");[m
             }[m
[31m-        }[m
 [m
[31m-        Date fechaActual = new Date();[m
[31m-        SimpleDateFormat formatoFecha = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");[m
[31m-        String creado = formatoFecha.format(fechaActual);[m
[32m+[m[32m            Date fechaActual = new Date();[m
[32m+[m[32m            SimpleDateFormat formatoFecha = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");[m
[32m+[m[32m            String creado = formatoFecha.format(fechaActual);[m
 [m
[31m-        Tareas tarea = new Tareas(descripcion, estado, creado, creado);[m
[32m+[m[32m            Tareas tarea = new Tareas(descripcion, estado, creado, creado);[m
[32m+[m[32m            tareasLista.add(tarea);[m
 [m
[31m-        try {[m
[31m-            mapper.writerWithDefaultPrettyPrinter().writeValue(new File(FILE_PATH), tarea);[m
[32m+[m[32m            mapper.writerWithDefaultPrettyPrinter().writeValue(archivo, tareasLista);[m
             System.out.println("Tarea agregada :)");[m
         } catch (IOException e){[m
[32m+[m[32m            System.err.println("Error al procesar el archivo: JSON: ");[m
             e.printStackTrace();[m
         }[m
     }[m
[1mdiff --git a/tareas.json b/tareas.json[m
[1mindex 75779d5..b98a07e 100644[m
[1m--- a/tareas.json[m
[1m+++ b/tareas.json[m
[36m@@ -1,7 +1,19 @@[m
[31m-{[m
[32m+[m[32m[ {[m
   "idTarea" : 1,[m
[31m-  "descripcion" : "Estudiar Curso de Udemy",[m
[32m+[m[32m  "descripcion" : "Estudiar en Udemy",[m
[32m+[m[32m  "estado" : "En progreso",[m
[32m+[m[32m  "creado" : "01/08/2025 12:07:17",[m
[32m+[m[32m  "modificado" : "01/08/2025 12:07:17"[m
[32m+[m[32m}, {[m
[32m+[m[32m  "idTarea" : 3,[m
[32m+[m[32m  "descripcion" : "Practicar lo aprendido",[m
   "estado" : "Sin iniciar",[m
[31m-  "creado" : "01/08/2025 11:10:49",[m
[31m-  "modificado" : "01/08/2025 11:10:49"[m
[31m-}[m
\ No newline at end of file[m
[32m+[m[32m  "creado" : "01/08/2025 12:09:03",[m
[32m+[m[32m  "modificado" : "01/08/2025 12:09:03"[m
[32m+[m[32m}, {[m
[32m+[m[32m  "idTarea" : 3,[m
[32m+[m[32m  "descripcion" : "Organizar los cursos de udemy para estudiar",[m
[32m+[m[32m  "estado" : "Sin iniciar",[m
[32m+[m[32m  "creado" : "01/08/2025 12:10:27",[m
[32m+[m[32m  "modificado" : "01/08/2025 12:10:27"[m
[32m+[m[32m} ][m
\ No newline at end of file[m
